var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.976,1,1.185]],["body/controllers/AppController.html",[0,1.253,1,1.523,2,0.902,3,0.602,4,0.602,5,0.482,6,1.663,7,0.602,8,1.029,9,2.871,10,1.663,11,0.073,12,0.74,13,2.155,14,0.74,15,1.86,16,0.837,17,0.482,18,1.441,19,1.663,20,0.602,21,0.602,22,1.663,23,1.663,24,1.095,25,2.155,26,0.035,27,0.049,28,0.035]],["title/modules/AppModule.html",[29,0.976,30,1.185]],["body/modules/AppModule.html",[1,1.167,2,0.627,3,0.419,4,0.419,5,0.335,8,0.515,11,0.073,12,0.515,14,0.515,16,0.943,17,0.335,18,0.961,19,1.156,20,0.419,21,0.419,26,0.024,27,0.037,28,0.024,29,1.168,30,1.81,31,0.627,32,0.627,33,0.93,34,0.93,35,0.627,36,1.426,37,0.93,38,1.156,39,1.156,40,1.49,41,1.426,42,0.93,43,0.93,44,1.499,45,1.772,46,1.499,47,2.297,48,3.131,49,1.499,50,0.93,51,0.93,52,0.93,53,0.93,54,2.297,55,2.297,56,1.499,57,1.499,58,0.762,59,1.499,60,1.156,61,1.156,62,1.499,63,1.499]],["title/injectables/AppService.html",[18,0.976,64,0.652]],["body/injectables/AppService.html",[3,0.663,4,0.663,5,0.53,7,0.663,8,1.099,9,2.989,11,0.071,12,0.814,14,0.814,15,1.985,16,0.663,17,0.53,18,1.338,20,0.663,21,0.663,24,1.205,26,0.039,27,0.052,28,0.039,64,0.894,65,1.205,66,1.829,67,2.371,68,2.371,69,2.371]],["title/injectables/LoggerMiddleware.html",[58,1.185,64,0.652]],["body/injectables/LoggerMiddleware.html",[3,0.513,4,0.513,5,0.41,7,0.513,8,0.919,11,0.073,12,0.631,14,0.631,16,0.513,17,0.41,20,0.513,21,0.513,26,0.03,27,0.044,28,0.03,50,1.14,51,1.14,52,1.14,53,1.14,58,1.359,60,1.417,61,1.417,64,0.747,65,0.933,70,1.417,71,1.837,72,2.674,73,2.674,74,2.432,75,2.671,76,3.153,77,1.837,78,1.417,79,1.417,80,2.674,81,1.837,82,1.837,83,1.837,84,1.837,85,1.837,86,1.837,87,1.837]],["title/controllers/TestController.html",[0,0.976,88,1.185]],["body/controllers/TestController.html",[0,0.866,2,0.866,3,0.578,4,0.578,5,0.462,7,0.578,8,1.001,10,1.597,11,0.072,12,0.711,14,0.711,16,0.814,17,0.462,20,0.578,21,0.578,22,1.597,23,1.597,24,1.052,26,0.034,27,0.047,28,0.034,88,1.48,89,1.597,90,2.07,91,1.597,92,3.37,93,2.6,94,2.07,95,2.07,96,2.07,97,1.158,98,1.597,99,2.07,100,2.07,101,2.07,102,2.07]],["title/modules/TestModule.html",[29,0.976,40,0.976]],["body/modules/TestModule.html",[2,0.808,3,0.54,4,0.54,5,0.432,11,0.072,16,0.907,17,0.432,20,0.54,21,0.54,26,0.031,27,0.045,28,0.031,29,1.357,31,0.808,32,0.808,33,1.199,34,1.199,35,0.808,36,1.721,37,1.721,40,1.684,41,1.721,42,1.199,43,1.199,45,1.49,88,1.409,97,1.29,98,1.49,103,1.49,104,1.49,105,1.932,106,1.932,107,1.932,108,1.932]],["title/injectables/TestService.html",[64,0.652,97,0.801]],["body/injectables/TestService.html",[3,0.675,4,0.675,5,0.54,7,0.675,8,1.112,11,0.071,12,0.83,14,0.83,15,1.499,16,0.675,17,0.54,20,0.675,21,0.675,24,1.227,26,0.039,27,0.053,28,0.039,64,0.905,65,1.227,91,1.863,93,2.818,97,1.112,109,1.863,110,2.415,111,2.415,112,2.415]],["title/coverage.html",[113,2.44]],["body/coverage.html",[0,1.218,1,1.052,5,0.462,6,1.597,11,0.069,18,0.866,26,0.034,27,0.047,28,0.034,35,0.866,52,1.285,58,1.052,64,0.942,66,1.597,70,1.597,79,2.247,88,1.052,89,1.597,97,0.711,109,1.597,113,1.597,114,2.07,115,2.07,116,2.07,117,4.108,118,3.855,119,2.247,120,2.913,121,1.597,122,2.07,123,2.07,124,2.07]],["title/dependencies.html",[32,1.171,125,1.957]],["body/dependencies.html",[11,0.073,17,0.566,26,0.041,27,0.054,28,0.041,32,1.059,126,3.741,127,2.532,128,2.532,129,2.532,130,2.532,131,2.532,132,2.532,133,2.532,134,2.532,135,2.532,136,2.532,137,2.532,138,2.532,139,2.532,140,2.532,141,2.532]],["title/miscellaneous/functions.html",[142,1.51,143,2.159]],["body/miscellaneous/functions.html",[7,0.759,11,0.063,26,0.044,27,0.057,28,0.044,35,1.619,50,1.686,51,1.686,53,1.686,74,2.699,75,2.699,78,2.095,119,2.095,121,2.699,142,2.095,143,2.095,144,3.499,145,2.717]],["title/index.html",[7,0.547,146,1.957,147,1.957]],["body/index.html",[11,0.064,26,0.053,27,0.064,28,0.053,148,3.26,149,3.26,150,3.26,151,3.26,152,3.26]],["title/modules.html",[31,1.323]],["body/modules.html",[11,0.061,26,0.049,27,0.061,28,0.049,30,1.541,31,1.269,40,1.269,153,3.751,154,3.751,155,3.751,156,3.751]],["title/overview.html",[157,2.44]],["body/overview.html",[2,0.983,11,0.063,26,0.038,27,0.052,28,0.038,29,0.983,30,1.962,31,0.983,32,0.983,33,1.458,34,1.458,35,0.983,36,1.458,37,1.458,38,1.812,39,1.812,40,1.687,41,1.973,42,1.458,43,1.458,65,1.194,97,1.238,103,1.812,104,1.812,157,1.812,158,3.179,159,2.35]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":117,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":137,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":120,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":118,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":158,"title":{},"body":{"overview.html":{}}}],["3",{"_index":159,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":139,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":134,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":141,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":126,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":129,"title":{},"body":{"dependencies.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apply(loggermiddleware",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["async",{"_index":92,"title":{},"body":{"controllers/TestController.html":{}}}],["auth",{"_index":81,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":156,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":153,"title":{},"body":{"modules.html":{}}}],["class",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_testmodule",{"_index":103,"title":{},"body":{"modules/TestModule.html":{},"overview.html":{}}}],["cluster_testmodule_providers",{"_index":104,"title":{},"body":{"modules/TestModule.html":{},"overview.html":{}}}],["configure",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(\"=======end",{"_index":87,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(\"=======logger",{"_index":85,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(req",{"_index":86,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TestController.html":{}}}],["consumer",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/TestController.html":{}},"body":{"controllers/AppController.html":{},"controllers/TestController.html":{},"coverage.html":{}}}],["controller('test",{"_index":99,"title":{},"body":{"controllers/TestController.html":{}}}],["controller/test/test.controller",{"_index":106,"title":{},"body":{"modules/TestModule.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"overview.html":{}}}],["controllers:[testcontroller",{"_index":107,"title":{},"body":{"modules/TestModule.html":{}}}],["coverage",{"_index":113,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/TestController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["demo",{"_index":152,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"dependencies.html":{},"overview.html":{}}}],["documentation",{"_index":114,"title":{},"body":{"coverage.html":{}}}],["example",{"_index":71,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"overview.html":{}}}],["express",{"_index":131,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"coverage.html":{}}}],["forroutes",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":79,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":143,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fycx",{"_index":149,"title":{},"body":{"index.html":{}}}],["get(\"message",{"_index":100,"title":{},"body":{"controllers/TestController.html":{}}}],["get('message",{"_index":94,"title":{},"body":{"controllers/TestController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmessage",{"_index":93,"title":{},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["getmessage():promise",{"_index":101,"title":{},"body":{"controllers/TestController.html":{}}}],["getmessage():string",{"_index":111,"title":{},"body":{"injectables/TestService.html":{}}}],["getting",{"_index":146,"title":{"index.html":{}},"body":{}}],["hello",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["identifier",{"_index":115,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestService.html":{}},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestService.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestService.html":{},"overview.html":{}}}],["ins6",{"_index":82,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["jwt",{"_index":133,"title":{},"body":{"dependencies.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"overview.html":{}}}],["log",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["logger",{"_index":121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loggermiddleware",{"_index":58,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["message",{"_index":112,"title":{},"body":{"injectables/TestService.html":{}}}],["metadata",{"_index":136,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["middleware",{"_index":84,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["middleware/logger.middleware",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":142,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/TestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"overview.html":{}}}],["module/test/test.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"modules.html":{},"overview.html":{}}}],["msg",{"_index":83,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["name",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":148,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":150,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":127,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":128,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":130,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":80,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":122,"title":{},"body":{"coverage.html":{}}}],["next",{"_index":75,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"overview.html":{}}}],["overview",{"_index":157,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":125,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":132,"title":{},"body":{"dependencies.html":{}}}],["prefix",{"_index":90,"title":{},"body":{"controllers/TestController.html":{}}}],["promise",{"_index":96,"title":{},"body":{"controllers/TestController.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"overview.html":{}}}],["providers:[testservice",{"_index":108,"title":{},"body":{"modules/TestModule.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/TestController.html":{}}}],["reflect",{"_index":135,"title":{},"body":{"dependencies.html":{}}}],["req",{"_index":78,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["res",{"_index":74,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/functions.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["rimraf",{"_index":138,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":151,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":140,"title":{},"body":{"dependencies.html":{}}}],["service/test/test.service",{"_index":98,"title":{},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{}}}],["src/.../main.ts",{"_index":144,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:13",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["src/controller/test/test.controller.ts",{"_index":89,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{}}}],["src/controller/test/test.controller.ts:10",{"_index":95,"title":{},"body":{"controllers/TestController.html":{}}}],["src/main.ts",{"_index":119,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/logger.middleware.ts",{"_index":70,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/middleware/logger.middleware.ts:9",{"_index":77,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/module/test/test.module.ts",{"_index":105,"title":{},"body":{"modules/TestModule.html":{}}}],["src/service/test/test.service.ts",{"_index":109,"title":{},"body":{"injectables/TestService.html":{},"coverage.html":{}}}],["src/service/test/test.service.ts:6",{"_index":110,"title":{},"body":{"injectables/TestService.html":{}}}],["started",{"_index":147,"title":{"index.html":{}},"body":{}}],["statements",{"_index":116,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/TestService.html":{}}}],["support",{"_index":154,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":155,"title":{},"body":{"modules.html":{}}}],["table",{"_index":124,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":123,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":91,"title":{},"body":{"controllers/TestController.html":{},"injectables/TestService.html":{}}}],["testcontroller",{"_index":88,"title":{"controllers/TestController.html":{}},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{},"coverage.html":{}}}],["testmodule",{"_index":40,"title":{"modules/TestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"modules.html":{},"overview.html":{}}}],["testservice",{"_index":97,"title":{"injectables/TestService.html":{}},"body":{"controllers/TestController.html":{},"modules/TestModule.html":{},"injectables/TestService.html":{},"coverage.html":{},"overview.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.testservice.getmessage",{"_index":102,"title":{},"body":{"controllers/TestController.html":{}}}],["type",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["use",{"_index":72,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":73,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["void",{"_index":76,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["world",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/TestModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nTestModule\n\nTestModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTestModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TestModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\n// import { AppController } from './app.controller';\n//import { AppService } from './app.service';\nimport { TestModule } from './module/test/test.module';\nimport { LoggerMiddleware } from './middleware/logger.middleware';\n\n@Module({\n  imports: [TestModule],\n // controllers: [AppController],\n  //providers: [AppService],\n})\nexport class AppModule implements NestModule{\n  configure(consumer: MiddlewareConsumer): any {\n    consumer\n      // 配置log 中间件\n      .apply(LoggerMiddleware)\n      // 设置路由过滤规则,匹配所有接口(可指定某一或某一类路由)\n      .forRoutes('*')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/logger.middleware.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.middleware.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\n\n/**\n * @Auth INS6+\n * @Msg log middleware\n */\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    console.log(\"=======logger========\")\n    //console.log(req)\n    //console.log(\"=======end========\")\n    next();\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestController.html":{"url":"controllers/TestController.html","title":"controller - TestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller/test/test.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                test\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMessage()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('message')\n                \n            \n\n            \n                \n                    Defined in src/controller/test/test.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { TestService} from '../../service/test/test.service';\n\n@Controller('test')\nexport class TestController {\n\n  constructor(private readonly testService :TestService ) {}\n\n  @Get(\"message\")\n  async getMessage():Promise{\n    return this.testService.getMessage();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestModule.html":{"url":"modules/TestModule.html","title":"module - TestModule","body":"\n                   \n\n\n\n\n    Modules\n    TestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TestModule\n\n\n\ncluster_TestModule_providers\n\n\n\n\nTestService\n\nTestService\n\n\n\nTestModule\n\nTestModule\n\nTestModule -->\n\nTestService->TestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/test/test.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TestService } from '../../service/test/test.service';\nimport { TestController } from '../../controller/test/test.controller';\n\n@Module({\n  imports:[],\n  controllers:[TestController],\n  providers:[TestService],\n  // 共享模块，加入此模块的资源可以被整个 TestModule 使用\n  exports:[]\n})\nexport class TestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestService.html":{"url":"injectables/TestService.html","title":"injectable - TestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/test/test.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessage\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/service/test/test.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class TestService {\n\n  getMessage():string{\n    return \"this is a test message...\";\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controller/test/test.controller.ts\n            \n            controller\n            TestController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/service/test/test.service.ts\n            \n            injectable\n            TestService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logger\n                        \n                        \n                    \n                \n            \n            \n                \nlogger(req, res, next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nnest-fycx\nnestjs root demo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_TestModule\n\n\n\ncluster_TestModule_providers\n\n\n\n\nTestModule\n\nTestModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTestModule->AppModule\n\n\n\n\n\nTestService\n\nTestService\n\nTestModule -->\n\nTestService->TestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
